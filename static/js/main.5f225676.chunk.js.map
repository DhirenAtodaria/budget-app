{"version":3,"sources":["Routes/Router.module.scss","components/StatisticsPage/StatisticsPage.module.scss","containers/Login/Login.module.scss","firebase.js","components/Navmenu/index.js","components/Navmenu/Navmenu.jsx","components/Leftnav/index.js","components/Leftnav/Leftnav.jsx","components/StatisticsPage/Graph/index.js","components/StatisticsPage/Graph/Graph.jsx","components/StatisticsPage/index.js","components/StatisticsPage/StatisticsPage.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Daily/index.js","components/Daily/Daily.jsx","components/Monthly/index.js","components/Monthly/Monthly.jsx","components/Yearly/index.js","components/Yearly/Yearly.jsx","Routes/MainRoutes.jsx","containers/Main/index.js","containers/Main/Main.jsx","containers/Login/index.js","containers/Login/Login.jsx","containers/App/index.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","Navmenu","state","dropdownMenuStyle","display","handleToggleDropdownMenu","newState","Object","assign","setState","Grid","padded","className","Menu","borderless","inverted","fluid","fixed","Item","header","as","Date","position","Input","placeholder","size","onClick","this","props","signOut","Button","basic","icon","toggle","Icon","name","vertical","style","Divider","fitted","Component","Leftnav","activeItem","handleItemClick","e","navigate","globalHistory","Column","tablet","computer","only","id","text","active","hidden","Graph","margin","top","right","bottom","left","animate","enableSlices","theme","fontSize","textColor","axis","legend","fontWeight","data","xScale","type","format","precision","xFormat","yScale","stacked","axisLeft","tickSize","tickPadding","legendOffset","legendPosition","value","Number","axisBottom","tickValues","curve","enablePointLabel","pointSymbol","color","borderWidth","borderColor","fill","r","strokeWidth","stroke","fillOpacity","pointSize","pointBorderWidth","pointBorderColor","from","modifiers","colors","scheme","lineWidth","yFormat","useMesh","StatisticsPage","monthly","yearly","activeLoader","dataPresent","dateReturner","date","month","getMonth","day","getDate","year","getFullYear","dateObjectRetreiver","prevMonthDate","dateObject","Math","round","push","setDate","console","log","dateObjectRetreiverDaily","month2","getDaysInMonth","days","allDataPresent","data2","totalGetter","total","forEach","item","y","prevProps","user","componentDidMount","firstDay","lastDay","collection","where","uid","get","then","query","docs","map","doc","amount","daily","sort","a","b","reverse","toDate","index","currentDate","currentMonthObject","find","x","currentMonthObject2","object","object2","dateArray","filter","amount2","splice","indexOf","length","styles","container","Loader","graph","opacity","textAlign","cardcontainer","Card","description","Dashboard","cDate","toLocaleString","Row","Header","dividing","width","monthGetter","Daily","spends","filteredspends","loading","error","formData","filterDate","handleChange","handleChangeFilter","dateFilter","dataRestore","handleChangeAmount","event","target","dataRetriever","spendID","submitButton","add","dataRemover","delete","Form","Field","onChange","label","control","DatePicker","selected","dateFormat","Message","section","horizontal","Table","singleLine","striped","selectable","unstackable","HeaderCell","Dropdown","floating","labeled","button","content","stopPropagation","Transition","Group","Body","animation","duration","spend","key","Cell","link","Monthly","step","Yearly","Routes","primary","noThrow","to","path","Main","mobile","floated","Login","signUpClicked","height","verticalAlign","maxWidth","Segment","iconPosition","signUpFormData","handleDetails","errorMessage1","email","errorMessage2","password","budget","signUp","secondary","justifyContent","alignItems","error2","errorMessage3","loginFormData","handleDetailsLogin","errorMessage4","content2","signIn","App","additionalUserInfo","errorReset","auth","signInWithEmailAndPassword","catch","errors","code","pointing","result","createUserWithEmailAndPassword","additionalSignUp","authListener","onAuthStateChanged","localStorage","setItem","removeItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5f225676.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Router_container__3W9N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatisticsPage_container__39qDY\",\"graph\":\"StatisticsPage_graph__3v7SO\",\"cardcontainer\":\"StatisticsPage_cardcontainer__2iX91\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__29sE5\"};","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDgwgqpQf71Q7Sy2KK4G4aiPiyqyo0cRlU\",\r\n    authDomain: \"personal-project-budget.firebaseapp.com\",\r\n    databaseURL: \"https://personal-project-budget.firebaseio.com\",\r\n    projectId: \"personal-project-budget\",\r\n    storageBucket: \"personal-project-budget.appspot.com\",\r\n    messagingSenderId: \"192207216810\",\r\n    appId: \"1:192207216810:web:3c3dc60961e1fc55bf70d3\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;\r\n ","import Navmenu from './Navmenu';\r\n\r\nexport default Navmenu;","import React, { Component } from 'react';\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport {Grid, Menu, Input, Divider, Button, Icon} from \"semantic-ui-react\";\r\n\r\nclass Navmenu extends Component {\r\n    state = {\r\n        dropdownMenuStyle: {\r\n          display: \"none\"\r\n        }\r\n      };\r\n    \r\n      handleToggleDropdownMenu = () => {\r\n        let newState = Object.assign({}, this.state);\r\n        if (newState.dropdownMenuStyle.display === \"none\") {\r\n          newState.dropdownMenuStyle = { display: \"flex\" };\r\n        } else {\r\n          newState.dropdownMenuStyle = { display: \"none\" };\r\n        }\r\n    \r\n        this.setState(newState);\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Grid padded className=\"tablet computer only\">\r\n                <Menu borderless inverted fluid fixed=\"top\">\r\n                    <Menu.Item header as=\"a\">\r\n                        Oznom - Budget Your Spending.\r\n                    </Menu.Item>\r\n                    <Menu.Item>{Date()}</Menu.Item>\r\n                    <Menu.Menu position=\"right\">\r\n                    <Menu.Item>\r\n                        <Input placeholder=\"Search...\" size=\"small\" />\r\n                    </Menu.Item>\r\n                        <Menu.Item as=\"a\">Dashboard</Menu.Item>\r\n                        <Menu.Item as=\"a\">About</Menu.Item>\r\n                        <Menu.Item as=\"a\" onClick={this.props.signOut}>Logout</Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu>\r\n            </Grid>\r\n            <Grid padded className=\"mobile only\">\r\n            <Menu borderless inverted fluid fixed=\"top\">\r\n              <Menu.Item header as=\"a\">\r\n                Oznom - Budget Your Spending.\r\n              </Menu.Item>\r\n              <Menu.Menu position=\"right\">\r\n                <Menu.Item>\r\n                  <Button\r\n                    basic\r\n                    inverted\r\n                    icon\r\n                    toggle\r\n                    onClick={this.handleToggleDropdownMenu}\r\n                  >\r\n                    <Icon name=\"content\" />\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n              <Menu\r\n                borderless\r\n                fluid\r\n                inverted\r\n                vertical\r\n                style={this.state.dropdownMenuStyle}\r\n              >\r\n                    <Menu.Item as=\"a\">Dashboard</Menu.Item>\r\n                    <Menu.Item as=\"a\">About</Menu.Item>\r\n                    <Menu.Item as=\"a\">Help</Menu.Item>\r\n                    <Divider fitted />\r\n                <Menu.Item>\r\n                  <Input placeholder=\"Search...\" size=\"small\" />\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Menu>\r\n          </Grid>\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navmenu;","import Leftnav from './Leftnav';\r\n\r\nexport default Leftnav;","import React, { Component } from 'react';\r\nimport { globalHistory } from '@reach/router';\r\nimport './Leftnav.css'\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport {Grid, Menu, Divider} from 'semantic-ui-react'\r\n\r\nexport default class Leftnav extends Component {\r\n\r\n  state = {activeItem : \"dashboard\"}\r\n\r\n  handleItemClick = (e, { name }) => {\r\n    this.setState({ activeItem: name }, this.navigate(name))\r\n  }\r\n\r\n  navigate = (name) => {\r\n    globalHistory.navigate(`${name}`)\r\n  }\r\n\r\n  render() {\r\n    const activeItem = this.state.activeItem\r\n      return(\r\n      <Grid.Column\r\n          tablet={3}\r\n          computer={3}\r\n          only=\"tablet computer\"\r\n          id=\"sidebar\"\r\n      >\r\n          <Menu vertical borderless fluid text>\r\n            <Menu.Item  name=\"dashboard\" active={activeItem === 'dashboard'} onClick={this.handleItemClick} as=\"a\">\r\n              Overview\r\n            </Menu.Item>\r\n            <Divider hidden />\r\n            <Menu.Item name=\"daily\" active={activeItem === 'daily'} onClick={this.handleItemClick} as=\"a\">Daily Spendings</Menu.Item>\r\n            <Menu.Item name=\"monthly\" active={activeItem === 'monthly'} onClick={this.handleItemClick} as=\"a\">Monthly Spendings</Menu.Item>\r\n            <Menu.Item name=\"yearly\" active={activeItem === 'yearly'} onClick={this.handleItemClick} as=\"a\">Yearly Spendings</Menu.Item>\r\n            <Divider hidden />\r\n          </Menu>\r\n      </Grid.Column>\r\n      )\r\n  }\r\n}","import Graph from \"./Graph\";\r\n\r\nexport default Graph;","import React, { Component } from 'react';\r\nimport { ResponsiveLine } from '@nivo/line';\r\n\r\n\r\n\r\nexport default class Graph extends Component {\r\n    render() {\r\n        const commonProperties = {\r\n            margin: { top: 20, right: 20, bottom: 60, left: 80 },\r\n            animate: true,\r\n            enableSlices: 'x',\r\n        }\r\n        const CustomSymbol = ({ size, color, borderWidth, borderColor }) => (\r\n            <g>\r\n                <circle fill=\"#fff\" r={size / 2} strokeWidth={borderWidth} stroke={borderColor} />\r\n                <circle\r\n                    r={size / 5}\r\n                    strokeWidth={borderWidth}\r\n                    stroke={borderColor}\r\n                    fill={color}\r\n                    fillOpacity={0.35}\r\n                />\r\n            </g>\r\n        )\r\n\r\n        const lineGraphSettings = {\r\n            theme: {\r\n                fontSize: '14px',\r\n                textColor: 'black',\r\n                axis : {\r\n                    legend: {\r\n                        text: {\r\n                            fontSize: 16,\r\n                            fontWeight: \"bold\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <ResponsiveLine\r\n                    {...commonProperties}  \r\n                    theme={lineGraphSettings.theme}                  \r\n                    data={this.props.data}\r\n                    xScale={{\r\n                        type: 'time',\r\n                        format: '%d/%m/%Y',\r\n                        precision: 'day',\r\n                    }}\r\n                    xFormat=\"time:%d/%m/%Y\"\r\n                    yScale={{\r\n                        type: 'linear',\r\n                        stacked:  false\r\n                    }}\r\n                    axisLeft={{\r\n                        tickSize: 0,\r\n                        tickPadding: 15,\r\n                        legend: 'Amount',\r\n                        legendOffset: -65,\r\n                        legendPosition: 'middle',\r\n                        format: value =>\r\n                            \"£\" + Number(value),\r\n                    }}\r\n                    \r\n                    axisBottom={{\r\n                        format: '%b %d',\r\n                        tickValues: 'every 6 days',\r\n                        legend: 'Date',\r\n                        legendOffset: 40,\r\n                        legendPosition: 'middle'\r\n                    }}\r\n                    curve={'catmullRom'}\r\n                    enablePointLabel={false}\r\n                    pointSymbol={CustomSymbol}\r\n                    pointSize={9}\r\n                    pointBorderWidth={1}\r\n                    pointBorderColor={{\r\n                        from: 'color',\r\n                        modifiers: [['darker', 0.3]],\r\n                    }}\r\n                    colors={this.props.scheme}\r\n                    lineWidth={4}\r\n\r\n                    yFormat={value => '£' + Number(value)}          \r\n                    useMesh={true}\r\n                    enableSlices={false}\r\n            />\r\n        )\r\n    }\r\n}","import StatisticsPage from './StatisticsPage';\r\n\r\nexport default StatisticsPage;","import React, { Component } from \"react\";\r\nimport styles from \"./StatisticsPage.module.scss\";\r\nimport Graph from \"./Graph\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { Card, Loader } from \"semantic-ui-react\";\r\n\r\nexport default class StatisticsPage extends Component {\r\n  state = {\r\n    monthly: null,\r\n    yearly: null,\r\n    data: null,\r\n    activeLoader: false,\r\n    dataPresent: false\r\n  };\r\n\r\n  dateReturner = date => {\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.user !== prevProps.user) {\r\n      console.log(this.props.user)\r\n      this.componentDidMount()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const date = new Date();\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth() - 1, 1);\r\n    const lastDay = new Date(date.getFullYear(), date.getMonth(), 0, 23, 59);\r\n\r\n    if (this.props.user) {\r\n      firestore\r\n        .collection(\"monthly\")\r\n        .where(\"uid\", \"==\", this.props.user.uid)\r\n        .get()\r\n        .then(query => {\r\n          this.setState({activeLoader : true})\r\n          const monthly = query.docs.map(doc => doc.data());\r\n          let total = 0;\r\n          monthly.forEach(item => {\r\n            total += Number(item.amount);\r\n          });\r\n\r\n          this.setState({ monthly: total });\r\n        })\r\n        .then(() => {\r\n          firestore\r\n            .collection(\"yearly\")\r\n            .where(\"uid\", \"==\", this.props.user.uid)\r\n            .get()\r\n            .then(query => {\r\n              const yearly = query.docs.map(doc => doc.data());\r\n              let total = 0;\r\n              yearly.forEach(item => {\r\n                total += Number(item.amount);\r\n              });\r\n\r\n              this.setState({ yearly: total });\r\n            });\r\n        })\r\n        .then(() => {\r\n          firestore\r\n            .collection(\"spendings\")\r\n            .where(\"date\", \">=\", firstDay)\r\n            .where(\"date\", \"<=\", lastDay)\r\n            .where(\"uid\", \"==\", this.props.user.uid)\r\n            .get()\r\n            .then(query => {\r\n              let month = this.dateObjectRetreiver();\r\n              let month2 = this.dateObjectRetreiverDaily();\r\n              const daily = query.docs.map(doc => doc.data());\r\n              daily.sort((a, b) => b.date - a.date).reverse();\r\n              daily.forEach(item => {\r\n                item.date = this.dateReturner(item.date.toDate());\r\n              });\r\n\r\n              let index = 0;\r\n              while (index < daily.length) {\r\n                let currentDate = daily[index].date;\r\n                let currentMonthObject = month.find(\r\n                  item => item.x === currentDate\r\n                );\r\n                let currentMonthObject2 = month2.find(\r\n                  item => item.x === currentDate\r\n                );\r\n                let object = {};\r\n                let object2 = {};\r\n                let dateArray = daily.filter(item => item.date === currentDate);\r\n                let amount = (this.state.monthly / 30) + (this.state.yearly / 365);\r\n                let amount2 = 0\r\n                dateArray.forEach(item => (amount += Number(item.amount)));\r\n                dateArray.forEach(item => (amount2 += Number(item.amount)));\r\n                object[\"x\"] = currentDate;\r\n                object[\"y\"] = amount;\r\n                object2[\"x\"] = currentDate;\r\n                object2[\"y\"] = amount2\r\n                month.splice(month.indexOf(currentMonthObject), 1, object);\r\n                month2.splice(month2.indexOf(currentMonthObject2), 1, object2);\r\n                index += dateArray.length;\r\n              }\r\n              this.setState({\r\n                data: [\r\n                  {\r\n                    id: \"Daily\",\r\n                    color: \"hsl(290, 70%, 50%)\",\r\n                    data: month\r\n                  }\r\n                ],\r\n\r\n                data2: [\r\n                  {\r\n                    id: \"Daily\",\r\n                    color: \"hsl(290, 70%, 50%)\",\r\n                    data: month2\r\n                  }\r\n                ],\r\n\r\n                activeLoader : false\r\n              });\r\n            });\r\n        })\r\n        .then(() => {\r\n          this.setState({dataPresent: true})\r\n        })\r\n    }\r\n  }\r\n\r\n  dateObjectRetreiver = () => {\r\n    const date = new Date();\r\n    const prevMonthDate = new Date(date.getFullYear(), date.getMonth() - 1, 1);\r\n    let month = [];\r\n    while (prevMonthDate.getMonth() === date.getMonth() - 1) {\r\n      let dateObject = {};\r\n      dateObject[\"x\"] = this.dateReturner(new Date(prevMonthDate));\r\n      dateObject[\"y\"] = Math.round(\r\n        (this.state.monthly / 30) + (this.state.yearly / 365)\r\n      );\r\n      month.push(dateObject);\r\n      prevMonthDate.setDate(prevMonthDate.getDate() + 1);\r\n    }\r\n    console.log(month)\r\n    return month;\r\n  };\r\n\r\n  dateObjectRetreiverDaily = () => {\r\n    const date = new Date();\r\n    const prevMonthDate = new Date(date.getFullYear(), date.getMonth() - 1, 1);\r\n    let month2 = [];\r\n    while (prevMonthDate.getMonth() === date.getMonth() - 1) {\r\n      let dateObject = {};\r\n      dateObject[\"x\"] = this.dateReturner(new Date(prevMonthDate));\r\n      dateObject[\"y\"] = 0;\r\n      month2.push(dateObject);\r\n      prevMonthDate.setDate(prevMonthDate.getDate() + 1);\r\n    }\r\n    return month2;\r\n  };\r\n\r\n  getDaysInMonth = (month, year) => {\r\n    var date = new Date(year, month, 1);\r\n    var days = [];\r\n    while (date.getMonth() === month) {\r\n      days.push(new Date(date));\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n    return days;\r\n  };\r\n\r\n  allDataPresent = () => {\r\n    if (this.state.data && this.state.data2) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  totalGetter = () => {\r\n    let total = 0;\r\n    if (this.state.data) {\r\n      this.state.data[0].data.forEach(item => {\r\n        total += Number(item.y)\r\n      })\r\n      return total;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.data)\r\n    return (\r\n      <section className={styles.container}>\r\n          <Loader active={this.state.activeLoader} />\r\n        <div className={styles.graph}>\r\n          {this.allDataPresent() && (\r\n            <Graph scheme={{ scheme: \"category10\" }} data={this.state.data} />\r\n          )}\r\n          {this.allDataPresent() && (\r\n            <h4 style={{ opacity: 0.7, textAlign: \"center\" }}>\r\n              Excluding Yearly/Monthly Bills\r\n            </h4>\r\n          )}\r\n          {this.allDataPresent() && (\r\n            <Graph scheme={{ scheme: \"nivo\" }} data={this.state.data2} />\r\n          )}\r\n        </div>\r\n        {this.state.dataPresent && <div className={styles.cardcontainer}>\r\n          {(this.state.monthly) ? (\r\n            <Card\r\n              \r\n              header=\"Current Monthly Bills\"\r\n              description={`For the month of March 2020 your current monthly bills are £${this.state.monthly}`}\r\n            />\r\n          ) :\r\n          (\r\n            <Card\r\n            \r\n            header=\"Current Monthly Bills\"\r\n            description={`You do not currently have any monthly bills.`}\r\n          />\r\n          )\r\n          }\r\n\r\n          {(this.state.yearly) ? (\r\n            <Card\r\n              \r\n              header=\"Current Yearly Bills\"\r\n              description={`For the month of Year 2020 your current Yearly bills are £${this.state.yearly}`}\r\n            />\r\n          )\r\n          :\r\n          (\r\n            <Card\r\n              \r\n              header=\"Current Yearly Bills\"\r\n              description={`You do not currently have any yearly bills.`}\r\n            />\r\n          )\r\n          }\r\n            <Card  color='black' header='Total Monthly Spends - Feb' description={this.totalGetter()}/>\r\n            <Card  color='black' header='Amount Over/Under Budget - Feb' description={3000 - this.totalGetter()} />\r\n\r\n        </div>}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import Dashboard from './Dashboard';\r\n\r\nexport default Dashboard;","import React, { Component } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport StatisticsPage from \"../StatisticsPage\";\r\n\r\nimport {\r\n  Grid,\r\n  Header\r\n} from \"semantic-ui-react\";\r\n\r\n\r\nimport \"./Dashboard.css\";\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  monthGetter() {\r\n    const options = { month: 'long'};\r\n    const cDate = new Date()\r\n    const previousDate = new Date(cDate.getFullYear(), cDate.getMonth()-1, 1)\r\n    const month = previousDate.toLocaleString('default', options);\r\n    return month\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Grid padded>\r\n          <Grid.Row>\r\n            <Header dividing size=\"huge\" as=\"h1\">\r\n              Dashboard\r\n              <Header style={{opacity : 0.7, margin: \"10px 0px\", width: \"100%\"}}  as='h2'>Spending Trends - {this.monthGetter()}</Header>\r\n            </Header>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <StatisticsPage user={this.props.user} />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import Daily from \"./Daily\";\r\n\r\nexport default Daily;","import React, { Component } from 'react';\r\nimport './Daily.css';\r\nimport { Button, Form, Divider, Table, Grid, Header, Message, Icon, Dropdown, Transition } from 'semantic-ui-react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { firestore } from '../../firebase';\r\n\r\nexport default class Daily extends Component {\r\n    state = {\r\n        spends : [],\r\n        filteredspends : [],\r\n        loading : false,\r\n        error: false,\r\n        formData : {\r\n            name: \"\",\r\n            amount: \"\",\r\n            date: new Date(),\r\n            type : \"daily\",\r\n            uid: null\r\n        },\r\n        filterDate: new Date(),\r\n        active: false\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user !== prevProps.user && this.props.user !== null) {\r\n            this.setState({ formData: {...this.state.formData, uid: this.props.user.uid} }, this.dataRetriever())\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user) {\r\n            this.setState({ formData: {...this.state.formData, uid: this.props.user.uid} })\r\n        }\r\n        this.dataRetriever();\r\n    }\r\n\r\n    handleChange = date => {\r\n        console.log(date)\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                date: date\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeFilter = date => {\r\n        this.setState({\r\n            filterDate: date\r\n        }, this.dateFilter(date))\r\n    }\r\n\r\n    dateFilter = (date) => {\r\n       let filteredspends = this.state.spends.filter(item => this.dateReturner(item.date.toDate()) === this.dateReturner(date))\r\n       this.setState({filteredspends})\r\n    }\r\n\r\n    dataRestore = () => {\r\n        this.setState({filteredspends : this.state.spends})\r\n    }\r\n\r\n    handleChangeAmount = (event) => {\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [event.target.name] : event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    dataRetriever = () => {\r\n        if (this.props.user) {\r\n            firestore\r\n                .collection(\"spendings\")\r\n                .where(\"uid\", \"==\", this.props.user.uid)\r\n                .get()\r\n                .then(query => {\r\n                    const spends = query.docs.map(doc => {\r\n                        return Object.assign(doc.data(), { spendID : doc.id})\r\n                    }) \r\n                    spends.sort((a,b) => b.date - a.date)\r\n                    this.setState( {spends : spends.reverse(),\r\n                                    filteredspends : spends.reverse()} )        \r\n                })\r\n                .then(() => {\r\n                    this.setState({loading: false, active: true})\r\n                })\r\n        }\r\n    }\r\n\r\n    submitButton = () => {\r\n        if (!this.state.formData.name || this.state.formData.amount < 0) {\r\n            this.setState({error : true})\r\n        } else {\r\n            this.setState({loading: true})\r\n            firestore\r\n                .collection(\"spendings\")\r\n                .add(this.state.formData)\r\n                .then(() => {\r\n                    this.setState({error : false})\r\n                    this.dataRetriever()\r\n                })\r\n        }\r\n    }\r\n\r\n    dataRemover = (value) => {\r\n        firestore\r\n            .collection(\"spendings\")\r\n            .doc(value)\r\n            .delete()\r\n            .then(() => {this.dataRetriever()})\r\n    }\r\n\r\n    dateReturner = (date) => {\r\n        let month = date.getMonth() + 1\r\n        let day = date.getDate()\r\n        let year = date.getFullYear()\r\n\r\n        return `${day}/${month}/${year}`\r\n    }\r\n\r\n    dataPresent = () => {\r\n        if (this.state.filteredspends.length === 0) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <Grid padded>\r\n                    <Grid.Row>\r\n                        <Header dividing size=\"huge\" as=\"h1\">\r\n                        Daily Spendings\r\n                        </Header>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                <Form loading={this.state.loading}>\r\n                    <Form.Field>\r\n                        <label>Name *</label>\r\n                        <input name=\"name\" placeholder='Enter the name of the spend' value={this.state.formData.name} onChange={this.handleChangeAmount}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Amount *</label>\r\n                        <input name=\"amount\" type='number' placeholder='£' value={this.state.formData.amount} onChange={this.handleChangeAmount} />\r\n                    </Form.Field>\r\n                    <Form.Field label=\"Date\" control={DatePicker} selected={this.state.formData.date} dateFormat=\"d/M/yyyy\" onChange={this.handleChange}/>\r\n                    <Button type='submit' onClick={this.submitButton}>Submit</Button>\r\n                </Form>\r\n                <Message hidden={!this.state.error} color=\"red\">\r\n                    <Message.Header>Error</Message.Header>\r\n                    <p>\r\n                        Please fill in all the fields properly.\r\n                    </p>\r\n                </Message>\r\n                <Divider section horizontal>Daily Spends</Divider>\r\n                {this.state.active &&\r\n                <Table color=\"green\" singleLine striped selectable unstackable>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>\r\n                                <Dropdown\r\n                                    text='Filter Date'\r\n                                    icon='filter'\r\n                                    floating\r\n                                    labeled\r\n                                    button\r\n                                    className='icon'\r\n                                >\r\n                                    <Dropdown.Menu>\r\n                                    <Dropdown.Header content='Date Filter' />\r\n                                        <Dropdown.Item>\r\n                                        <Form onClick={e => e.stopPropagation()}>\r\n                                            <Form.Field control={DatePicker} selected={this.state.filterDate} dateFormat=\"d/M/yyyy\" onChange={this.handleChangeFilter}/>\r\n                                        </Form>\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Divider />\r\n                                        <Dropdown.Item onClick={this.dataRestore}>All</Dropdown.Item>\r\n                                        <Dropdown.Item>Current Month</Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                                \r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign=\"center\">Remove Item</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Transition.Group as={Table.Body} animation=\"fade up\" duration={200}>\r\n                            {this.state.filteredspends.map((spend, index) => (  \r\n                              <Table.Row key={index}>\r\n                                    <Table.Cell>{this.dateReturner(spend.date.toDate())}</Table.Cell>\r\n                                    <Table.Cell>{spend.name}</Table.Cell>\r\n                                    <Table.Cell>£{spend.amount}</Table.Cell>\r\n                                    <Table.Cell textAlign=\"center\"><Icon onClick={() => this.dataRemover(spend.spendID)} link name=\"remove\" size=\"large\" color=\"red\" /></Table.Cell>\r\n                              </Table.Row>\r\n                            ))}\r\n                    </Transition.Group>\r\n                </Table>\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}","import Monthly from './Monthly';\r\n\r\nexport default Monthly;","import React, { Component } from 'react';\r\nimport styles from './Monthly.module.scss';\r\nimport { Button, Form, Divider, Table, Grid, Header, Message, Icon, Transition } from 'semantic-ui-react'\r\nimport { firestore } from '../../firebase';\r\n\r\nexport default class Monthly extends Component {\r\n    state = {\r\n        spends : [],\r\n        loading : false,\r\n        error: false,\r\n        formData : {\r\n            name: \"\",\r\n            amount: null,\r\n            type : \"monthly\",\r\n            uid: null\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user !== prevProps.user && this.props.user !== null) {\r\n            this.setState({ formData: {...this.state.formData, uid: this.props.user.uid} }, this.dataRetriever())\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user){\r\n            this.setState({ formData: {...this.state.formData, uid: this.props.user.uid} })\r\n        }\r\n        this.dataRetriever();\r\n    }\r\n\r\n    handleChangeAmount = (event) => {\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [event.target.name] : event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    dataRetriever = () => {\r\n        if (this.props.user) {\r\n            firestore\r\n                .collection(\"monthly\")\r\n                .where(\"uid\", \"==\", this.props.user.uid)\r\n                .get()\r\n                .then(query => {\r\n                    const spends = query.docs.map(doc => {\r\n                        return Object.assign(doc.data(), { spendID : doc.id})\r\n                    }) \r\n                    this.setState( {spends : spends.reverse()} )        \r\n                })\r\n                .then(() => {\r\n                    this.setState({loading: false})\r\n                })\r\n        }\r\n            \r\n    }\r\n\r\n    dataRemover = (value) => {\r\n        firestore\r\n            .collection(\"monthly\")\r\n            .doc(value)\r\n            .delete()\r\n            .then(() => {this.dataRetriever()})\r\n    }\r\n\r\n    submitButton = () => {\r\n        if (!this.state.formData.name || this.state.formData.amount < 0) {\r\n            this.setState({error : true})\r\n        } else {\r\n            this.setState({loading: true})\r\n            firestore\r\n                .collection(\"monthly\")\r\n                .add(this.state.formData)\r\n                .then(() => {\r\n                    this.setState({error : false})\r\n                    this.dataRetriever()\r\n                })\r\n        }\r\n    }\r\n\r\n    dataPresent = () => {\r\n        if (this.state.spends.length === 0) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.formData.uid)\r\n        return (\r\n            <section className={styles.container}>\r\n                <Grid padded>\r\n                    <Grid.Row>\r\n                        <Header dividing size=\"huge\" as=\"h1\">\r\n                        Recurring Monthly Spendings\r\n                        <Header style={{opacity : 0.7, margin: \"10px 0px\", width: \"100%\"}}  as='h2'>This is where you enter your recurring  monthly bills.</Header>\r\n                        </Header>\r\n                        \r\n                    </Grid.Row>\r\n                </Grid>\r\n                <Form loading={this.state.loading}>\r\n                    <Form.Field>\r\n                        <label>Name</label>\r\n                        <input name=\"name\" placeholder='Enter the name of the monthly cost' value={this.state.formData.name} onChange={this.handleChangeAmount}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Amount</label>\r\n                        <input name=\"amount\" type='number' step=\"0.01\" placeholder='£' value={this.state.formData.amount} onChange={this.handleChangeAmount} />\r\n                    </Form.Field>\r\n                    {/* <Form.Field label=\"Date\" control={DatePicker} selected={this.state.formData.date} onChange={this.handleChange}/> */}\r\n                    <Button type='submit' onClick={this.submitButton}>Submit</Button>\r\n                </Form>\r\n                <Message hidden={!this.state.error} color=\"red\">\r\n                    <Message.Header>Error</Message.Header>\r\n                    <p>\r\n                        Please fill in all the fields properly.\r\n                    </p>\r\n                </Message>\r\n                <Divider section horizontal>Monthly Spends</Divider>\r\n                {this.dataPresent() &&\r\n                <Table color=\"green\"  singleLine striped selectable unstackable>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Type</Table.HeaderCell>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign=\"center\">Remove Item</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Transition.Group as={Table.Body} animation=\"fade up\" duration={2000}>\r\n                            {this.state.spends.map((spend, index) => (\r\n                              <Table.Row key={index}>\r\n                                    <Table.Cell>Monthly</Table.Cell>\r\n                                    <Table.Cell>{spend.name}</Table.Cell>\r\n                                    <Table.Cell>£{spend.amount}</Table.Cell>\r\n                                    <Table.Cell textAlign=\"center\"><Icon onClick={() => this.dataRemover(spend.spendID)} link name=\"remove\" size=\"large\" color=\"red\" /></Table.Cell>\r\n                              </Table.Row>\r\n                            ))}\r\n                    </Transition.Group>\r\n                </Table>\r\n            }\r\n            </section>\r\n        )\r\n    }\r\n}","import Yearly from './Yearly';\r\n\r\nexport default Yearly;","import React, { Component } from 'react';\r\nimport styles from './Yearly.module.scss';\r\nimport { Button, Form, Divider, Table, Grid, Header, Message, Icon, Transition } from 'semantic-ui-react'\r\nimport { firestore } from '../../firebase';\r\n\r\nexport default class Yearly extends Component {\r\n    state = {\r\n        spends : [],\r\n        loading : false,\r\n        error: false,\r\n        formData : {\r\n            name: \"\",\r\n            amount: null,\r\n            type : \"yearly\",\r\n            uid: null\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user !== prevProps.user && this.props.user !== null) {\r\n            this.setState({ formData: {...this.state.formData, uid: this.props.user.uid} }, this.dataRetriever())\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user){\r\n            this.setState({ formData: {...this.state.formData, uid: this.props.user.uid} })\r\n        }\r\n        this.dataRetriever();\r\n    }\r\n\r\n    handleChangeAmount = (event) => {\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [event.target.name] : event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    dataRetriever = () => {\r\n        if (this.props.user) {\r\n            firestore\r\n                .collection(\"yearly\")\r\n                .where(\"uid\", \"==\", this.props.user.uid)\r\n                .get()\r\n                .then(query => {\r\n                    const spends = query.docs.map(doc => {\r\n                        return Object.assign(doc.data(), { spendID : doc.id})\r\n                    }) \r\n                    this.setState( {spends : spends.reverse()} )        \r\n                })\r\n                .then(() => {\r\n                    this.setState({loading: false})\r\n                })\r\n        }\r\n    }\r\n\r\n    dataRemover = (value) => {\r\n        firestore\r\n            .collection(\"yearly\")\r\n            .doc(value)\r\n            .delete()\r\n            .then(() => {this.dataRetriever()})\r\n    }\r\n\r\n    submitButton = () => {\r\n        if (!this.state.formData.name || this.state.formData.amount < 0) {\r\n            this.setState({error : true})\r\n        } else {\r\n            this.setState({loading: true})\r\n            firestore\r\n                .collection(\"yearly\")\r\n                .add(this.state.formData)\r\n                .then(() => {\r\n                    this.setState({error : false})\r\n                    this.dataRetriever()\r\n                })\r\n        }\r\n    }\r\n\r\n    dataPresent = () => {\r\n        if (this.state.spends.length === 0) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className={styles.container}>\r\n                <Grid padded>\r\n                    <Grid.Row>\r\n                        <Header dividing size=\"huge\" as=\"h1\">\r\n                        Recurring Yearly Spendings\r\n                        </Header>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                <Form loading={this.state.loading}>\r\n                    <Form.Field>\r\n                        <label>Name</label>\r\n                        <input name=\"name\" placeholder='Enter the name of the yearly cost' value={this.state.formData.name} onChange={this.handleChangeAmount}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Amount</label>\r\n                        <input name=\"amount\" type='number' step=\"0.01\" placeholder='£' value={this.state.formData.amount} onChange={this.handleChangeAmount} />\r\n                    </Form.Field>\r\n                    {/* <Form.Field label=\"Date\" control={DatePicker} selected={this.state.formData.date} onChange={this.handleChange}/> */}\r\n                    <Button type='submit' onClick={this.submitButton}>Submit</Button>\r\n                </Form>\r\n                <Message hidden={!this.state.error} color=\"red\">\r\n                    <Message.Header>Error</Message.Header>\r\n                    <p>\r\n                        Please fill in all the fields properly.\r\n                    </p>\r\n                </Message>\r\n                <Divider section horizontal>Yearly Spends</Divider>\r\n                {this.dataPresent() &&\r\n                <Table color=\"green\" singleLine striped selectable unstackable>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Type</Table.HeaderCell>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign=\"center\">Remove Item</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Transition.Group as={Table.Body} animation=\"fade up\" duration={2000}>\r\n                            {this.state.spends.map((spend, index) => (\r\n                              <Table.Row key={index}>\r\n                                    <Table.Cell>Yearly</Table.Cell>\r\n                                    <Table.Cell>{spend.name}</Table.Cell>\r\n                                    <Table.Cell>£{spend.amount}</Table.Cell>\r\n                                    <Table.Cell textAlign=\"center\"><Icon onClick={() => this.dataRemover(spend.spendID)} link name=\"remove\" size=\"large\" color=\"red\" /></Table.Cell>\r\n                              </Table.Row>\r\n                            ))}\r\n                    </Transition.Group>\r\n                </Table>\r\n            }\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Router, Redirect } from '@reach/router'\r\nimport Dashboard from '../components/Dashboard';\r\nimport Daily from '../components/Daily';\r\nimport Monthly from '../components/Monthly';\r\nimport Yearly from '../components/Yearly';\r\nimport styles from './Router.module.scss';\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return(\r\n            <Router className={styles.container} primary={false}>\r\n                <Redirect noThrow from=\"/\" to=\"dashboard\" />\r\n                <Dashboard user={this.props.user} path=\"dashboard\" />\r\n                <Daily user={this.props.user} path=\"daily\" />\r\n                <Monthly user={this.props.user} path=\"monthly\" />\r\n                <Yearly user={this.props.user} path=\"yearly\" />\r\n            </Router>\r\n        )\r\n    }\r\n} ","import Main from './Main';\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport './Main.css';\r\nimport Navmenu from '../../components/Navmenu';\r\nimport Leftnav from '../../components/Leftnav';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport MainRoutes from '../../Routes/MainRoutes';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navmenu signOut={this.props.signOut}/>\r\n        <Grid padded>\r\n            <Leftnav />\r\n            <Grid.Column\r\n              mobile={16}\r\n              tablet={13}\r\n              computer={13}\r\n              floated=\"right\"\r\n              id=\"content\"\r\n            >\r\n              <MainRoutes user={this.props.user} />\r\n            </Grid.Column>\r\n        </Grid>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Main;\r\n","import Login from './Login';\r\nexport default Login;","import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\r\nimport styles from './Login.module.scss';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    signUpClicked : false\r\n  }\r\n\r\n  handleChange = () => {\r\n    this.setState({signUpClicked : !this.state.signUpClicked})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <section className={styles.container}>\r\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as='h2' color='#21295C' textAlign='center'>\r\n            <h1 style={{color: \"#21295C\", fontSize: \"48px\", fontWeight: \"bolder\"}}>Oznom</h1> Log-in to your account\r\n          </Header>\r\n          {!this.state.signUpClicked ?\r\n            (\r\n            <>\r\n              <Form error={this.props.error2} size='large'>\r\n                <Segment stacked>\r\n                  <Form.Input error={this.props.errorMessage3} fluid icon='user' iconPosition='left' placeholder='E-mail address' name=\"email\" value={this.props.loginFormData.email} onChange={this.props.handleDetailsLogin}/>\r\n                  <Form.Input\r\n                    error={this.props.errorMessage4}\r\n                    name=\"password\"\r\n                    fluid\r\n                    icon='lock'\r\n                    iconPosition='left'\r\n                    placeholder='Password'\r\n                    type='password'\r\n                    value={this.props.loginFormData.password} onChange={this.props.handleDetailsLogin}\r\n                  />\r\n                  <Message\r\n                    error={true}\r\n                    header='Action Forbidden'\r\n                    content={this.props.content2}\r\n                  />\r\n                  <Button onClick={this.props.signIn} secondary fluid size='large'>\r\n                    Login\r\n                  </Button>\r\n                </Segment>\r\n              </Form>\r\n              <Message style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n              New to us?  \r\n              <Button onClick={this.handleChange}secondary size='tiny'>\r\n                Sign Up\r\n              </Button>\r\n              </Message>\r\n            </>\r\n            )\r\n            :\r\n            (\r\n              <>\r\n              <Form error={this.props.error} size='large'>\r\n                <Segment stacked>\r\n                  <Form.Input fluid icon='user' iconPosition='left' placeholder='Name' name=\"name\" value={this.props.signUpFormData.name} onChange={this.props.handleDetails} />\r\n                  <Form.Input error={this.props.errorMessage1} fluid icon='envelope' iconPosition='left' placeholder='E-mail address' name=\"email\" value={this.props.signUpFormData.email} onChange={this.props.handleDetails}  />\r\n                  <Form.Input\r\n                    error={this.props.errorMessage2} \r\n                    name=\"password\"\r\n                    fluid\r\n                    icon='lock'\r\n                    iconPosition='left'\r\n                    placeholder='Password'\r\n                    type='password'\r\n                    value={this.props.signUpFormData.password} onChange={this.props.handleDetails}\r\n                  />\r\n                  <Form.Input fluid icon='money bill alternate' type='number' iconPosition='left' placeholder='Monthly Total Budget' name=\"budget\" value={this.props.signUpFormData.budget} onChange={this.props.handleDetails}/>\r\n                  <Message\r\n                    error={true}\r\n                    header='Action Forbidden'\r\n                    content={this.props.content}\r\n                  />\r\n                  <Button onClick={this.props.signUp} secondary fluid size='large'>\r\n                    Sign Up\r\n                  </Button>\r\n                </Segment>\r\n              </Form>\r\n              <Message style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n                Already have an account?     \r\n                <Button onClick={this.handleChange}secondary size='tiny'>\r\n                  Login\r\n                </Button>\r\n              </Message>\r\n            </>\r\n            )\r\n          }\r\n          \r\n        </Grid.Column>\r\n      </Grid>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import App from \"./App\";\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport styles from '../../Routes/Router.module.scss'\r\nimport { Router, Redirect, globalHistory } from '@reach/router'\r\nimport firebase, { firestore } from '../../firebase'\r\nimport Main from '../../containers/Main';\r\nimport Login from '../../containers/Login';\r\nexport default class App extends Component {\r\n  state = {\r\n      user: null,\r\n      additionalUserInfo: null,\r\n      signUpFormData: {\r\n          email: \"\",\r\n          password: \"\",\r\n          name: \"\",\r\n          budget: null\r\n      },\r\n      loginFormData: {\r\n          email: \"\",\r\n          password: \"\"\r\n      },\r\n      error: false,\r\n      content: \"\",\r\n      errorMessage1: null,\r\n      errorMessage2: null,\r\n      errorMessage3: null,\r\n      errorMessage4: null,\r\n      error2: false,\r\n      content2: \"\"\r\n  }\r\n  errorReset = () => {\r\n      console.log(\"resetted\")\r\n      this.setState({\r\n          error: false,\r\n          content: \"\",\r\n          errorMessage1: null,\r\n          errorMessage2: null,\r\n          errorMessage3: null,\r\n          errorMessage4: null,\r\n          error2: false,\r\n          content2: \"\"\r\n      })\r\n  }\r\n  componentDidMount() {\r\n      this.authListener();\r\n  }\r\n  authListener() {\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n          if (user) {\r\n              this.setState({ user });\r\n              localStorage.setItem(\"user\", user.uid);\r\n          } else {\r\n              this.setState({ user: null });\r\n              localStorage.removeItem(\"user\");\r\n          }\r\n      });\r\n  }\r\n  handleDetails = event => {\r\n      this.setState({\r\n          signUpFormData: {\r\n              ...this.state.signUpFormData,\r\n              [event.target.name]: event.target.value\r\n          }\r\n      });\r\n  };\r\n  handleDetailsLogin = event => {\r\n      this.setState({\r\n          loginFormData: {\r\n              ...this.state.loginFormData,\r\n              [event.target.name]: event.target.value\r\n          }\r\n      });\r\n  };\r\n  signIn = () => {\r\n      firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(\r\n              this.state.loginFormData.email,\r\n              this.state.loginFormData.password\r\n          )\r\n          .catch((errors) => {\r\n              this.errorReset();\r\n              let code = errors.code;\r\n              switch (code) {\r\n                  case 'auth/invalid-email':\r\n                      this.setState({errorMessage3: {content: \"Please enter a valid email adrress\", pointing: \"below\"}})\r\n                      break\r\n                  case 'auth/wrong-password':\r\n                      this.setState({errorMessage4: {content: \"The password you have entered in incorrect.\"}})\r\n                      break\r\n                  case 'auth/user-not-found':\r\n                      console.log(\"notfound\")\r\n                      this.setState({error2: true, content2: \"There isn't an account associated with that e-mail address.\"})\r\n                      break\r\n                  default:\r\n                      this.setState({error2: true, content: `An error has occured. Code: ${code}`})\r\n              }\r\n              return false\r\n          })\r\n          .then(result => {\r\n              if (result) {\r\n                  this.setState({\r\n                      user: result.user,\r\n                      additionalUserInfo: result.additionalUserInfo\r\n                  });\r\n                  globalHistory.navigate(\"/app\"); \r\n              }\r\n          })\r\n  }\r\n  signUp = () => {\r\n      firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(\r\n              this.state.signUpFormData.email,\r\n              this.state.signUpFormData.password\r\n          )\r\n          .catch((errors) => {\r\n              let code = errors.code;\r\n              this.errorReset();\r\n              switch (code) {\r\n                  case 'auth/invalid-email':\r\n                      this.setState({errorMessage1: {content: \"Please enter a valid email adrress\", pointing: \"below\"}})\r\n                      break\r\n                  case 'auth/weak-password':\r\n                      this.setState({errorMessage2: {content: \"Please enter a stronger password\"}})\r\n                      break\r\n                  case 'auth/email-already-in-use':\r\n                      this.setState({error: true, content: \"You can only sign up for an account once with a given e-mail address.\"})\r\n                      break\r\n                  default:\r\n                      this.setState({error: true, content: `An error has occured. Code: ${code}`})\r\n              }\r\n              return false\r\n          })\r\n          .then(result => {\r\n              if (result) {\r\n                  this.setState({\r\n                      user: result.user,\r\n                      additionalUserInfo: result.additionalUserInfo\r\n                  }, this.additionalSignUp);\r\n              }\r\n          })\r\n  }\r\n  signOut = () => {\r\n      firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(() => {\r\n              this.setState({ user: null });\r\n              globalHistory.navigate(\"/\");\r\n          });\r\n  };\r\n  additionalSignUp = () => {\r\n      firestore\r\n          .collection(\"users\")\r\n          .add({\r\n              uid: this.state.user.uid,\r\n              name: this.state.signUpFormData.name,\r\n              budget: this.state.signUpFormData.budget,\r\n          })\r\n          .then(() => {\r\n              globalHistory.navigate(\"/app\");\r\n          })\r\n  }\r\n  render() {\r\n      return(\r\n          <Router className={styles.container} primary={false}>\r\n              <Redirect noThrow from=\"/\" to=\"login\" />\r\n              <Main user={this.state.user} signOut={this.signOut} path=\"app/*\" />\r\n              <Login \r\n                  error={this.state.error} \r\n                  error2={this.state.error2}\r\n                  content={this.state.content} \r\n                  content2={this.state.content2}\r\n                  errorMessage1={this.state.errorMessage1}\r\n                  errorMessage2={this.state.errorMessage2}\r\n                  errorMessage3={this.state.errorMessage3}\r\n                  errorMessage4={this.state.errorMessage4}\r\n                  loginFormData={this.state.loginFormData} \r\n                  signUpFormData={this.state.signUpFormData} \r\n                  signIn={this.signIn} signUp={this.signUp} \r\n                  handleDetailsLogin={this.handleDetailsLogin} \r\n                  handleDetails={this.handleDetails} \r\n                  path=\"login\" \r\n              />\r\n          </Router>\r\n      )\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}